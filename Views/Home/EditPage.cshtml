@model EKContent.web.Models.ViewModels.EditPageViewModel

@{
    ViewBag.Title = Model.TitleText();
    ViewBag.SiteTitle = Model.NavigationModel.Site.Title;    
}

@Html.Partial("Nav", Model.NavigationModel)
<h3>@Model.TitleText()</h3>
@using (Html.BeginForm("EditPage", "Home", FormMethod.Post, new { @class="well"}))
{
     @Html.HiddenFor(m => m.NavigationModel.Page.Id)
     @Html.HiddenFor(m => m.ParentId)
    <div class="control-group">
    @Html.LabelFor(m => m.Page.Title)
    @Html.TextBoxFor(m => m.Page.Title)
    @Html.Help("The title of the page")
    @Html.ValidationMessageFor(m => m.Page.Title)
    </div>
        <div class="control-group">
    @Html.TextBoxFor(m => m.Page.Priority, new { @readonly = "readonly"})<div data-slider="#Page_Priority"></div>
    @Html.Help("Use slider to change priority. Determines the order of pages. Page with a priority of 1 will appear before a page of priority 2.")@Html.Help("The priority of page. A page with a priority of 1 will show up before a page of priority 2")
    </div>
    <div class="control-group">
    @Html.LabelFor(m => m.Page.PageType)
    @Html.DropDownListFor(m => m.Page.PageType, Model.PageTypesSelectList()) 
     @Html.Help("Blog will result in an accordian style, HTML will list all contents of page, Contact should only be used on the contact page")      
    </div>
    
    <div class="control-group">
    @Html.LabelFor(m => m.Page.Description)
    @Html.TextBoxFor(m => m.Page.Description)
     @Html.Help("The description of the page- not currently being used")       
    </div>    
    
    <div class="control-group">
    @Html.LabelFor(m => m.Page.ShowTwitterFeed)
    @Html.CheckBoxFor(m => m.Page.ShowTwitterFeed)
     @Html.Help("If Twitter is configured- Feed will be displayed on right side of page.")       
    </div>    
    <div class="control-group">
    @Html.LabelFor(m => m.Page.Active)
    @Html.CheckBoxFor(m => m.Page.Active)
     @Html.Help("Whether or not the page will be seen- not currently being used.")       
    </div>
    <div class="control-group">
    Move the content on this page to a new page below this page.
    <button class="btn btn-large" data-action-post=@Url.Action("MovePage")>Move Page</button>
    
     @Html.Help("This can be used to add new content to this page and 'retire' the content on this page.")       
    </div>       
    
    
    <button type="submit" value="save" class="btn btn-primary btn-large">Save</button>
    <button class="btn btn-large" data-href=@Url.Action("Index", new { id = Model.Id() })>Cancel</button>
    
}
